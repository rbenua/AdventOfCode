 0: addi  5 16  5 ; jump init (17)
go:
 1: seti  1  7  3 ; r3 = 1
l2:
 2: seti  1  4  1 ; r1 = 1
 3: mulr  3  1  4 ; r4 = r3 * r1
 4: eqrr  4  2  4 ; r4 = (r4 == r2)
 5: addr  4  5  5 ; skip 1 if r4
 6: addi  5  1  5 ; skip 1
 7: addr  3  0  0 ; r0 = r3 + r0
 8: addi  1  1  1 ; r1++
 9: gtrr  1  2  4 ; r4 = (r1 > r2)
10: addr  5  4  5 ; skip 1 if r4
11: seti  2  1  5 ; jump l
12: addi  3  1  3
13: gtrr  3  2  4
14: addr  4  5  5 ; jump rel(r4)
15: seti  1  4  5 ; jump l2 (2)
16: mulr  5  5  5 ; exit
init:
17: addi  2  2  2 ; r2 += 2
18: mulr  2  2  2 ; r2 = r2^2
19: mulr  5  2  2 ; r2 = r2 * 19
20: muli  2 11  2 ; r2 = r2 * 11
21: addi  4  1  4 ; r4 += 1
22: mulr  4  5  4 ; r4 = r4 * 22
23: addi  4 19  4 ; r4 += 19
24: addr  2  4  2 ; r2 += r4
25: addr  5  0  5 ; skip next if r0 = 1
26: seti  0  9  5 ; jump go
27: setr  5  7  4 ; r4 = 27
28: mulr  4  5  4 ; r4 = r4 * 28
29: addr  5  4  4 ; r4 += 29
30: mulr  5  4  4 ; r4 *= 30
31: muli  4 14  4 ; r4 *= 14
32: mulr  4  5  4 ; r4 *= 32
33: addr  2  4  2 ; r2 += r4
34: seti  0  9  0 ; r0 = 0
35: seti  0  6  5 ; jump go
